{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","imgs","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,EAAWK,QAAhB,mBAA2BE,OAC9CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAjBS,SAACP,GAClBF,EAAeE,EAAEQ,OAAOF,a,+BCRnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAClC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAOgB,IAAKN,IACvB,4BAAKA,QCFJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EAETd,mBAAS,CAClCqB,KAAM,GACNa,SAAS,IAJyB,mBAE9BC,EAF8B,KAEtBC,EAFsB,KAgBtC,OATAC,qBAAU,WACNxB,EAASC,GAAWwB,MAAM,SAAAhB,GACtBc,EAAS,CACLf,KAAMC,EACNY,SAAS,SAGlB,CAACpB,IAEGqB,EDdyBI,CAAazB,GAAhC0B,EAFwB,EAE7BnB,KAAYa,EAFiB,EAEjBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,qCAAd,SAAqDhB,IAEjDoB,EACA,mBAAGJ,UAAU,oCAAb,yBACA,qBAAKA,UAAU,YAAf,SAEQU,EAAKjB,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,eAESA,GADCA,EAAIC,aEd7BgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAW9B,OACI,qCACI,gDACA,cAAC,EAAD,CACIA,cAAgBA,IAEpB,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAACoB,GAAD,OACZ,cAAC,EAAD,CAEI7B,SAAW6B,GADLA,Y,MCpBlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.585c5fc1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue.trim(), ...cats ] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleChange }\r\n            />\r\n        </form>\r\n    \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=99mg8EG8SgT6NMnYKfwEAdACevwpTbi5`;\r\n\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n    //console.log(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({  title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url }  alt={title}/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:imgs , loading } = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\" animate__animated animate__fadeIn\">{ category }</h3>\r\n            {\r\n                loading ? \r\n                <p className=\" animate__animated animate__flash\">Cargando...</p> :\r\n                <div className=\"card-grid\">\r\n                    {\r\n                        imgs.map(img=>\r\n                            <GifGridItem \r\n                                key={ img.id } \r\n                                { ...img } \r\n                            />\r\n                        )\r\n                    }\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\n\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [ state , setState ] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category ).then( gifs =>{\r\n            setState({\r\n                data: gifs,\r\n                loading: false,\r\n            })\r\n        });\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Piece']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories([\r\n    //         ...categories,\r\n    //         'One Piece'\r\n    //     ]);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory \r\n                setCategories={ setCategories }\r\n            />\r\n            <hr />\r\n            {/* <button onClick={ handleAdd } >Agregar</button> */}\r\n            <ol>\r\n                { \r\n                    categories.map( (cat) => \r\n                        <GifGrid \r\n                            key={ cat } \r\n                            category={ cat } \r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}